{"mappings":"ACAA,MAAM,EAAa,oBACb,EAAc,CAClB,KACA,eACA,iBACA,iBACA,kBACA,mBACA,sBACA,6BACA,iCACA,6BACA,wCACD,CAED,KAAK,gBAAgB,CAAC,UAAW,AAAA,IAC/B,EAAM,SAAS,CACb,OAAO,IAAI,CAAC,GACT,IAAI,CAAC,AAAA,IACJ,QAAQ,IAAI,CAAC,gBACN,EAAM,MAAM,CAAC,KAG5B,GAEA,KAAK,gBAAgB,CAAC,QAAS,AAAA,IAC7B,EAAM,WAAW,CACf,OAAO,KAAK,CAAC,EAAM,OAAO,EACvB,IAAI,CAAC,AAAA,GACJ,AAAG,GAII,MAAM,EAAM,OAAO,EAAE,IAAI,CAAC,AAAA,IACjB,QAAQ,KAAK,GAC3B,OAAO,IAAI,CAAC,GAAY,IAAI,CAAC,AAAA,IAC3B,EAAM,GAAG,CAAC,EAAM,OAAO,CAAE,EAC3B,GACO,KAIjB,GAEA,KAAK,gBAAgB,CAAC,WAAY,AAAA,IAChC,EAAM,SAAS,CACb,OAAO,IAAI,GAAG,IAAI,CAAC,AAAA,GACV,QAAQ,GAAG,CAChB,EAAW,MAAM,CAAC,AAAA,GACT,IAAc,GACpB,GAAG,CAAC,AAAA,GACE,OAAO,MAAM,CAAC,MAK/B","sources":["<anon>","src/service-worker.js"],"sourcesContent":["const CACHE_NAME = 'notebook-cache-v1';\nconst urlsToCache = [\n    './',\n    './index.html',\n    './notebook.css',\n    './notebook.mjs',\n    './lib/parser.js',\n    './img/spiral.png',\n    './icon/notebook.png',\n    './examples/Countdown.ipynb',\n    './examples/fetch-threejs.ipynb',\n    './examples/MicroGrad.ipynb',\n    './examples/Notebook User Manual.ipynb'\n];\nself.addEventListener('install', (event)=>{\n    event.waitUntil(caches.open(CACHE_NAME).then((cache)=>{\n        console.info('Opened cache');\n        return cache.addAll(urlsToCache);\n    }));\n});\nself.addEventListener('fetch', (event)=>{\n    event.respondWith(caches.match(event.request).then((response)=>{\n        if (response) return response;\n        return fetch(event.request).then((response)=>{\n            const clone = request.clone();\n            caches.open(CACHE_NAME).then((cache)=>{\n                cache.put(event.request, response);\n            });\n            return response;\n        });\n    }));\n});\nself.addEventListener('activate', (event)=>{\n    event.waitUntil(caches.keys().then((cacheNames)=>{\n        return Promise.all(cacheNames.filter((cacheName)=>{\n            return cacheName !== CACHE_NAME;\n        }).map((cacheName)=>{\n            return caches.delete(cacheName);\n        }));\n    }));\n});\n\n//# sourceMappingURL=service-worker.js.map\n","const CACHE_NAME = 'notebook-cache-v1';\nconst urlsToCache = [\n  './',\n  './index.html',\n  './notebook.css',\n  './notebook.mjs',\n  './lib/parser.js',\n  './img/spiral.png',\n  './icon/notebook.png',\n  './examples/Countdown.ipynb',\n  './examples/fetch-threejs.ipynb',\n  './examples/MicroGrad.ipynb',\n  './examples/Notebook User Manual.ipynb'\n];\n\nself.addEventListener('install', event => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then(cache => {\n        console.info('Opened cache');\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    caches.match(event.request)\n      .then(response => {\n        if(response){\n          return response;\n        }\n\n        return fetch(event.request).then(response => {\n          const clone = request.clone();\n          caches.open(CACHE_NAME).then(cache => {\n            cache.put(event.request, response);\n          });\n          return response;\n        })\n      })\n  );\n});\n\nself.addEventListener('activate', event => {\n  event.waitUntil(\n    caches.keys().then(cacheNames => {\n      return Promise.all(\n        cacheNames.filter(cacheName => {\n          return cacheName !== CACHE_NAME\n        }).map(cacheName => {\n          return caches.delete(cacheName);\n        })\n      )\n    })\n  );\n});\n\n"],"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","console","info","addAll","respondWith","match","request","response","fetch","clone","put","keys","cacheNames","Promise","all","filter","cacheName","map","delete"],"version":3,"file":"service-worker.js.map"}